"use strict";const{contextBridge:s,ipcRenderer:o}=require("electron");s.exposeInMainWorld("electronAPI",{getAvailableMonitors:()=>o.invoke("get-available-monitors"),openProjectorWindow:e=>o.invoke("open-projector-window",e),closeProjectorWindow:()=>o.invoke("close-projector-window"),updateProjector:e=>o.invoke("update-projector",e),onUpdateSlide:e=>{o.on("update-slide",(t,i)=>e(i))},removeUpdateSlideListener:()=>{o.removeAllListeners("update-slide")},notifyVideoEnded:()=>o.send("video-ended"),onVideoEnded:e=>{o.on("video-ended-notification",e)},removeVideoEndedListener:()=>{o.removeAllListeners("video-ended-notification")},onMainProcessLog:e=>{o.on("main-process-log",(t,i)=>{console.log("[Main Process]:",i),e(i)})},controlProjectorVideo:(e,t)=>o.send("control-projector-video",e,t),onVideoControl:e=>{o.on("video-control-command",(t,i,n)=>e(i,n))},removeVideoControlListener:()=>{o.removeAllListeners("video-control-command")},notifyVideoState:e=>o.send("video-state-update",e),onVideoStateUpdate:e=>{o.on("video-state-notification",(t,i)=>e(i))},removeVideoStateListener:()=>{o.removeAllListeners("video-state-notification")},savePresentation:e=>o.invoke("save-presentation",e),loadPresentation:()=>o.invoke("load-presentation"),selectImages:()=>o.invoke("select-images"),windowMinimize:()=>o.invoke("window-minimize"),windowMaximize:()=>o.invoke("window-maximize"),windowClose:()=>o.invoke("window-close"),settingsGet:e=>o.invoke("settings-get",e),settingsSet:(e,t)=>o.invoke("settings-set",e,t),settingsDelete:e=>o.invoke("settings-delete",e),createLibrary:(e,t)=>o.invoke("create-library",e,t),loadLibraryMetadata:e=>o.invoke("load-library-metadata",e),saveLibraryMetadata:(e,t)=>o.invoke("save-library-metadata",e,t),listLibraryEvents:e=>o.invoke("list-library-events",e),createLibraryEvent:(e,t)=>o.invoke("create-library-event",e,t),loadLibraryEvent:(e,t)=>o.invoke("load-library-event",e,t),saveLibraryEvent:(e,t)=>o.invoke("save-library-event",e,t),deleteLibraryEvent:(e,t)=>o.invoke("delete-library-event",e,t),resolveAssetPath:(e,t)=>o.invoke("resolve-asset-path",e,t),selectLibraryFolder:()=>o.invoke("select-library-folder"),listLibraryAssets:e=>o.invoke("list-library-assets",e),importAssetsToLibrary:(e,t)=>o.invoke("import-assets-to-library",e,t),browseForAssets:e=>o.invoke("browse-for-assets",e),importAssetsWithThumbnails:(e,t)=>o.invoke("import-assets-with-thumbnails",e,t),saveVideoThumbnail:(e,t,i)=>o.invoke("save-video-thumbnail",e,t,i),checkAssetUsage:(e,t)=>o.invoke("check-asset-usage",e,t),deleteLibraryAsset:(e,t)=>o.invoke("delete-library-asset",e,t),broadcastPresentationState:e=>o.invoke("broadcast-presentation-state",e),onRemoteCommand:e=>{["remote-stage-next","remote-stage-prev","remote-go-live","remote-clear","remote-stage-slide","remote-next-stack","remote-prev-stack"].forEach(i=>{o.on(i,(n,r)=>e(i,r))})}});
